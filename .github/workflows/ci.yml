name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - develop
      - githubactions*
      - feature/**
      - fix/**
      - pr/**

jobs:
  unit-tests:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "GCC-6, no RTTI"
            buildtype: "boost"
            packages: "g++-6"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            llvm_add_ppa: ""
            llvm_ver: ""
            b2_args: "cxxstd=98,03,11,14,1y toolset=gcc-6 cxxflags=\"--coverage -fsanitize=address,leak,undefined -fno-sanitize-recover=undefined -DBOOST_TRAVISCI_BUILD -fno-rtti\" linkflags=\"--coverage -lasan -lubsan\""
            gcovtool: "gcov-6"
          - name: "GCC-8"
            buildtype: "boost"
            packages: "g++-8"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            llvm_add_ppa: ""
            llvm_ver: ""
            b2_args: "cxxstd=98,03,11,14,1z toolset=gcc-8 cxxflags=\"--coverage -fsanitize=address,leak,undefined -fno-sanitize-recover=undefined -DBOOST_TRAVISCI_BUILD\" linkflags=\"--coverage  -lasan -lubsan\""
            gcovtool: "gcov-8"
          - name: "GCC-4.6"
            buildtype: "boost"
            packages: "g++-4.6"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            llvm_add_ppa: ""
            llvm_ver: ""
            b2_args: "cxxstd=98,0x toolset=gcc-4.6 cxxflags=\"--coverage -DBOOST_TRAVISCI_BUILD\" linkflags=\"--coverage\""
            gcovtool: "gcov-4.6"
          - name: "Clang-9, libc++"
            buildtype: "boost"
            packages: "libc++-dev"
            packages_to_remove: ""
            os: "ubuntu-18.04"
            llvm_add_ppa: ""
            llvm_ver: "9"
            b2_args: "cxxstd=98,03,11,14,1z toolset=clang-libc++ cxxflags=\"--coverage -DBOOST_TRAVISCI_BUILD\" linkflags=\"--coverage\""
            gcovtool: "gcov_for_clang.sh"
          - name: "Clang-3.8"
            buildtype: "boost"
            packages: "clang-3.8 llvm-3.8"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            llvm_add_ppa: ""
            llvm_ver: "3.8"
            b2_args: "cxxstd=03,11,14 toolset=clang-3.8 cxxflags=\"--coverage -fsanitize=address,leak,undefined -fno-sanitize-recover=undefined -DBOOST_TRAVISCI_BUILD\" linkflags=\"--coverage -fsanitize=address,leak,undefined\""
            gcovtool: "gcov_for_clang.sh"

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    steps:
      - uses: actions/checkout@v2
      - name: Check if running in container
        if: matrix.container != ''
        run: echo "GHA_CONTAINER=${{ matrix.container }}" >> $GITHUB_ENV

      - name: Install packages
        shell: bash
        env:
          CI_LLVM_ADD_PPA: ${{ matrix.llvm_add_ppa }}
          CI_LLVM_VER: ${{ matrix.llvm_ver }}
          CI_PACKAGES: ${{ matrix.packages }}
          CI_PACKAGES_TO_REMOVE: ${{ matrix.packages_to_remove }}
        run: |
          source .github/boost_ci_linux.sh
          ci_remove_packages --packages="${CI_PACKAGES_TO_REMOVE}"
          ci_install_packages --packages="${CI_PACKAGES}" --llvm-add-ppa=$CI_LLVM_ADD_PPA --llvm-version=$CI_LLVM_VER

      - name: Prepare Boost libraries
        shell: bash
        env:
          CI_LLVM_VER: ${{ matrix.llvm_ver }}
          CI_GIT_BRANCH: ${{ github.base_ref }}
        run: |
          CI_GIT_BRANCH=${CI_GIT_BRANCH:-$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')}

          source .github/boost_ci_linux.sh
          ci_prepare_boost_libraries --git-branch=$CI_GIT_BRANCH --repo-name=$(basename $GITHUB_REPOSITORY) --llvm-version=$CI_LLVM_VER

      - name: Run Tests
        shell: bash
        env:
          CI_B2_ARGS: ${{ matrix.b2_args }}
        run: |
          set -ex

          CI_REPO_NAME=$(basename $GITHUB_REPOSITORY)

          CI_BOOST_IN_LIBS_DIR=${CI_BOOST_IN_LIBS_DIR:-$(basename $CI_REPO_NAME)}
          CI_BOOST_ROOT_DIR=${CI_BOOST_ROOT_DIR:-$HOME/boost-local}

          UBSAN_OPTIONS=print_stacktrace=1
          LSAN_OPTIONS=verbosity=1:log_threads=1

          cd $CI_BOOST_ROOT_DIR/libs/$CI_BOOST_IN_LIBS_DIR/test/
          sh -c "../../../b2 -j2 $CI_B2_ARGS"
          ../../../dist/bin/inspect ..

      - name: Preprocess Coverage
        shell: bash
        env:
          CI_LLVM_VER: ${{ matrix.llvm_ver }}
          CI_GCOVTOOL: ${{ matrix.gcovtool }}
        run: |
          source .github/boost_ci_linux.sh
          ci_preprocess_coverage --repo-name=$(basename $GITHUB_REPOSITORY) --llvm-version=$CI_LLVM_VER --ignore-coverage='' --gcov-tool=$CI_GCOVTOOL

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: ./coverals/coverage.info
          flag-name: ${{ matrix.name }}
          parallel: true
  finish:
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true
